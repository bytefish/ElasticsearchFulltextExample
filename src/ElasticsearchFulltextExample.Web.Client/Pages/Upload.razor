@page "/Upload"

@using ElasticsearchFulltextExample.Web.Client.Components
@using ElasticsearchFulltextExample.Web.Client.Extensions;
@using ElasticsearchFulltextExample.Web.Client.Infrastructure;
@using ElasticsearchFulltextExample.Shared.Client

@inject SearchClient SearchClient
@inject IStringLocalizer<SharedResource> Loc

<PageTitle>Index Git Repository</PageTitle>


<EditForm Model="@CurrentUpload" OnValidSubmit="@(async () => await HandleValidSubmitAsync())" FormName="upload_form" novalidate>
    <SimpleValidator TModel=UploadModel ValidationFunc="ValidateCurrentUpload" />
    
    <FluentStack Orientation="Orientation.Vertical">
        <div style="width: 100%;">
            <FluentStack Orientation="Orientation.Horizontal" VerticalAlignment="VerticalAlignment.Center">
                <div>
                    <FluentTextField Style="@("width: 100%;")" Name="title" @bind-Value="CurrentUpload.Title" Label="Title" Required />
                </div>
                <FluentValidationMessage For="@(() => CurrentUpload.Title)" />
            </FluentStack>
        </div>
        <div style="width: 100%;">
            <FluentStack Orientation="Orientation.Horizontal" VerticalAlignment="VerticalAlignment.Center">
                <div style="width: 100%">
                    <FluentTextField Label="Suggestion" Style="@("width: 100%;")" @bind-Value="CurrentUpload.Suggestion" @oninput="@(e => CurrentUpload.Suggestion = e.Value as string)" @onkeydown="OnSuggestionEnter"></FluentTextField>
                </div>
                <FluentButton OnClick="OnAddSuggestion">Add Suggestion</FluentButton>
            </FluentStack>
        </div>
        <div style="width: 100%;">
            <FluentStack Orientation="Orientation.Horizontal" HorizontalGap="4" VerticalAlignment="VerticalAlignment.Center">
                <FluentLabel>Suggestions: </FluentLabel>

                @for (int i = 0; i < CurrentUpload.Suggestions.Count; i++)
                {
                    var suggestion = CurrentUpload.Suggestions[i];

                    <FluentBadge Appearance="Appearance.Neutral" OnDismissClick="@((e) => RemoveSuggestion(suggestion))">@suggestion</FluentBadge>
                }
            </FluentStack>
        </div>
        <div style="width: 100%;">
            <FluentStack Orientation="Orientation.Horizontal" VerticalAlignment="VerticalAlignment.Center">
                <div style="width: 100%">
                    <FluentTextField Label="Keyword" Style="@("width: 100%;")" @bind-Value="CurrentUpload.Keyword" @oninput="@(e => CurrentUpload.Keyword = e.Value as string)" @onkeydown="OnKeywordEnter"></FluentTextField>
                </div>
                <FluentButton OnClick="OnAddKeyword">Add Keyword</FluentButton>
            </FluentStack>
        </div>
        <div style="width: 100%;">
            <FluentStack Orientation="Orientation.Horizontal" HorizontalGap="4" VerticalAlignment="VerticalAlignment.Center">
                <FluentLabel>Keywords: </FluentLabel>
                @for (int i = 0; i < CurrentUpload.Keywords.Count; i++)
                {
                    var keyword = CurrentUpload.Keywords[i];

                    <FluentBadge Appearance="Appearance.Neutral" OnDismissClick="@((e) => RemoveKeyword(keyword))">@keyword</FluentBadge>
                }
            </FluentStack>
        </div>
        <div style="width: 100%;">
            <FluentLabel>Select File:</FluentLabel>

            <FluentInputFile @ref="@myFileUploader"
                             DragDropZoneVisible="false"
                             Mode="InputFileMode.Stream"
                             Multiple="true"
                             AnchorId="MyUploadButton"
                             MaximumFileSize="@(100 * 1024 * 1024)"
                             Accept="*.*"
                             OnCompleted="@OnCompletedAsync" />

            <FluentButton Style="@("width: 100%;")"  Id="MyUploadButton" Appearance="Appearance.Accent">
                Select Document ...
            </FluentButton>
        </div>
        <div>
            <FluentStack Orientation="Orientation.Horizontal">
                <FluentButton Type="ButtonType.Submit" Appearance="Appearance.Accent">Submit Repository to Index</FluentButton>
                <FluentButton Appearance="Appearance.Accent" OnClick="@(async () => await HandleDiscardAsync())">Discard Changes</FluentButton>
            </FluentStack>
        </div>
        <div>

        </div>
        <div>
            <FluentValidationSummary />
        </div>
    </FluentStack>
</EditForm>